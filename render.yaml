services:
  - type: web
    name: main
    env: docker
    dockerfilePath: ./docker/Dockerfile
    dockerContext: ./docker
    repo: https://github.com/farukaydin/automatisch
    healthCheckPath: /
    envVars:
      - key: POSTGRES_HOST
        fromDatabase:
          name: elephant
          property: host
      - key: POSTGRES_PORT
        fromService:
          type: redis
          name: lightning
          property: port # available properties are listed below
      - key: POSTGRES_DATABASE
        fromService:
          type: redis
          name: lightning
          property: database # available properties are listed below
      - key: POSTGRES_USERNAME
        fromService:
          type: redis
          name: lightning
          property: user # available properties are listed below
      - key: POSTGRES_PASSWORD
        fromService:
          type: redis
          name: lightning
          property: password # available properties are listed below
      - key: REDIS_HOST
        fromService:
          type: redis
          name: lightning
          property: host # available properties are listed below
      - key: REDIS_PORT
        fromService:
          type: redis
          name: lightning
          property: port
      - fromGroup: common-env-vars
  - type: redis
    name: lightning
    plan: free
    ipAllowList: # required
      - source: 0.0.0.0/0
        description: everywhere
    maxmemoryPolicy: noeviction

databases:
  - name: elephant
    plan: free
    databaseName: mydb # optional (Render may add a suffix)
    postgresMajorVersion: 14
envVarGroups:
  - name: common-env-vars
    envVars:
      - key: APP_ENV
        value: production
      - key: PROTOCOL
        value: https
      - key: PORT
        value: 443
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: WEBHOOK_SECRET_KEY
        generateValue: true
      - key: APP_SECRET_KEY
        generateValue: true
